// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(cuid())
  name            String
  email           String      @unique
  password        String?
  image           String?
  refreshToken    String?
  isVerifiedEmail DateTime?
  created_at      DateTime?   @default(now())
  updated_at      DateTime?   @default(now()) @updatedAt
  ChatUsers       ChatUsers[]
  message         Message[]
}

model File {
  id   String @id @default(cuid())
  name String
  size Int
  type String
  url  String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
}

model Chat {
  id         String      @id @default(cuid())
  title      String?
  is_group   Boolean?    @default(false)
  image      String?
  created_at DateTime?   @default(now())
  updated_at DateTime?   @default(now()) @updatedAt
  messages   Message[]
  chat_users ChatUsers[]

  @@map("chats")
}

model ChatUsers {
  user_id    String
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat_id    String
  chat       Chat      @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  is_admin   Boolean?  @default(false)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt

  @@id([user_id, chat_id])
  @@map("chat_users")
}

model Message {
  id         String    @id @default(cuid())
  user_id    String
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat_id    String
  chat       Chat      @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  is_deleted Boolean?  @default(false)
  message    String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt

  @@map("messages")
}
