// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(cuid())
  name            String
  email           String      @unique
  password        String?
  image           String?
  refreshToken    String?
  isVerifiedEmail DateTime?
  createdAt       DateTime?   @default(now())
  updatedAt       DateTime    @updatedAt
  ChatUsers       ChatUsers[]
}

model File {
  id   String @id @default(cuid())
  name String
  size Int
  type String
  url  String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
}

model Chat {
  id         String      @id @default(cuid())
  title      String?
  is_group   Boolean?    @default(false)
  created_at DateTime?   @default(now())
  users      ChatUsers[]

  @@map("chats")
}

model ChatUsers {
  user_id  String
  user     User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat_id  String
  chat     Chat      @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  is_admin Boolean?  @default(false)
  messages Message[]

  @@id([user_id, chat_id])
  @@map("chat_users")
}

model Message {
  id         String    @id @default(cuid())
  author_id  String
  chat_id    String
  chat_user  ChatUsers @relation(fields: [chat_id, author_id], references: [chat_id, user_id], onDelete: Cascade)
  is_deleted Boolean?  @default(false)
  created_at DateTime? @default(now())
  content    String

  @@map("messages")
}
